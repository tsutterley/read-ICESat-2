# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python on pull request

on:
  pull_request:

jobs:
  build-linux:

    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version: [3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install openmpi-bin mpi-default-bin openmpi-doc \
            libopenmpi-dev gdal-bin libgdal-dev libproj-dev proj-data \
            proj-bin libgeos-dev libhdf5-openmpi-dev libxml2-dev libxslt1-dev
        pip install --upgrade pip
        pip install --upgrade setuptools
        if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
        export CPLUS_INCLUDE_PATH=/usr/include/gdal
        export C_INCLUDE_PATH=/usr/include/gdal
        env MPICC=/usr/bin/mpicc
        export CC=mpicc
        export HDF5_MPI="ON"
        export HDF5_DIR=/usr/lib/x86_64-linux-gnu/hdf5/openmpi
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pip install --no-deps .
        pytest --cov=./ --cov-report=xml \
            --username=${{ secrets.EARTHDATA_USERNAME }} \
            --password=${{ secrets.EARTHDATA_PASSWORD }}
    - name: Archive code coverage results
      uses: actions/upload-artifact@v2
      with:
        name: code-coverage-report
        path: ./coverage.xml


  build-macos:

    runs-on: macos-latest
    strategy:
      matrix:
        python-version: [3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        brew install open-mpi
        brew install proj
        brew install geos
        brew install gdal
        brew unlink hdf5
        brew install hdf5-mpi
        brew install libxml2
        brew install libxslt
        brew install pkg-config
        pip install --upgrade pip
        pip install --upgrade setuptools
        if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
        export CC=mpicc
        export HDF5_MPI="ON"
        export HDF5_DIR=/usr/local/opt/hdf5-mpi
        pip install git+https://github.com/h5py/h5py.git
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pip install --no-deps .
        pytest --username=${{ secrets.EARTHDATA_USERNAME }} \
            --password=${{ secrets.EARTHDATA_PASSWORD }}
